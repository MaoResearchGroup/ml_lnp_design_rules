{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNHq+T94I3yrGnwhKEKOuwn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Qo8JQJ40bs4D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673924639313,"user_tz":300,"elapsed":22411,"user":{"displayName":"Leo Cheng","userId":"06763634622528917750"}},"outputId":"62a9aa57-93ec-4157-81db-0af18bc1b3da"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["import numpy as np\n","import sympy\n","import os\n","import sys\n","import csv\n","import pandas as pd\n","from google.colab import drive\n","drive.mount(\"/content/drive\",force_remount=True)"]},{"cell_type":"code","source":["def read(filename):\n","    with open(os.path.join(sys.path[0], filename), \"r\") as f:\n","        reader = csv.reader(f)\n","        header = next(reader)\n","        lines = np.array([i for i in reader])\n","\n","    return header, lines"],"metadata":{"id":"CWmH9JiWb-cv","executionInfo":{"status":"ok","timestamp":1673924639315,"user_tz":300,"elapsed":9,"user":{"displayName":"Leo Cheng","userId":"06763634622528917750"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["def solve(lipid,a,b,c,d):\n","    '''\n","    lipid (string): helper lipid\n","    a (float): Dlin:lipid\n","    b (float): Chol:DMG\n","    c (float): N:P ratio\n","    d (float): lipid+Dlin+(d% pDNA) ~default = 80\n","    100-d (float): Chol+DMG+(e% pDNA) ~default = 20\n","\n","    '''\n","    n = 0 #presence of ionizable N\n","    if lipid == 'DOTAP':\n","        lipid_wt = 663.1\n","        n = 1\n","    elif lipid == 'DDAB':\n","        lipid_wt = 630.952\n","        n = 1\n","    elif lipid == 'DOPE':\n","        lipid_wt = 744.03\n","    elif lipid == 'DSPC':\n","        lipid_wt = 790.15\n","    elif lipid == '18PG':\n","        lipid_wt = 799.042\n","    elif lipid == '14PA':\n","        lipid_wt = 614.767\n","\n","    N = np.array([[-a,1,0,0,0,0],\n","                [0,0,1,-b,0,0],\n","                [n,1,0,0,-c*9304,0],\n","                [1,1,0,0,d/100,d],\n","                [0,0,1,1,(100-d)/100,(100-d)]])\n","\n","    mol_solutions = np.array(sympy.Matrix(N).rref()[0])[:,5]\n","\n","    def conversion(mol_percents, lipid_wt):\n","        \n","        Dlin = 642.11\n","        Chol = 386.65\n","        DMG = 2509\n","        pDNA = 3023800\n","\n","        MW = np.array([lipid_wt, Dlin, Chol, DMG, pDNA])\n","        wts = mol_percents*MW\n","        wt_percents = wts/sum(wts)*100\n","\n","        return wt_percents\n","\n","    wt_solutions = conversion(mol_solutions, lipid_wt)\n","\n","    return mol_solutions, wt_solutions"],"metadata":{"id":"lRs1T_MhcBI-","executionInfo":{"status":"ok","timestamp":1673924639467,"user_tz":300,"elapsed":159,"user":{"displayName":"Leo Cheng","userId":"06763634622528917750"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def write(solved_data):\n","    \n","  with open(\"/content/drive/MyDrive/Shared Colab for LNP ML/LC/2. Raw Data/0_Master_Formulas_calculated.csv\", 'w', encoding = 'utf-8-sig') as f:\n","    solved_data.to_csv(f)\n","\n","    return"],"metadata":{"id":"U7HhFkZOcHnt","executionInfo":{"status":"ok","timestamp":1673924639469,"user_tz":300,"elapsed":5,"user":{"displayName":"Leo Cheng","userId":"06763634622528917750"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["if __name__ == '__main__':\n","    \n","    _, data = read(\"/content/drive/MyDrive/Shared Colab for LNP ML/LC/2. Raw Data/0_Master_Formulas.csv\")\n","    print(data)\n","    \n","    solved_data = np.array(['Formula label', 'Helper lipid', 'wt_Helper', 'wt_Dlin', 'wt_Chol', 'wt_DMG', 'wt_pDNA'])\n","    for row in data:\n","        _, wt = solve(row[1], float(row[3]), float(row[5]), float(row[2]), float(row[4]))\n","        new_row = np.concatenate((row[:2], wt, row[6:]))\n","        solved_data = np.vstack([solved_data, new_row])\n","\n","    \n","    df_solved_data = pd.DataFrame(solved_data)\n","    #print(df_solved_data)\n","    write(df_solved_data)"],"metadata":{"id":"aZltRUytcMp1","executionInfo":{"status":"ok","timestamp":1673924647214,"user_tz":300,"elapsed":7748,"user":{"displayName":"Leo Cheng","userId":"06763634622528917750"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e6fd1f2e-68de-44af-94cb-499db4f49e5a"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[['1' '18PG' '4' '200' '20' '500']\n"," ['2' '18PG' '8' '200' '20' '500']\n"," ['3' '18PG' '12' '200' '20' '500']\n"," ...\n"," ['1078' 'DDAB' '4' '1' '80' '10']\n"," ['1079' 'DDAB' '8' '1' '80' '10']\n"," ['1080' 'DDAB' '12' '1' '80' '10']]\n"]}]}]}